<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" 
	integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"
	 integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN" crossorigin="anonymous"></script>
	<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
	<!-- Add the datatables library CSS -->
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.3/css/jquery.dataTables.min.css">
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/dt/dt-1.10.25/datatables.min.css"/>
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/fixedheader/3.1.9/css/fixedHeader.dataTables.min.css"/>
<link rel="stylesheet" href="./css/overview.css">
<!-- Add the jQuery library -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script type="text/javascript" src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/v/dt/dt-1.10.25/datatables.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/fixedheader/3.1.9/js/dataTables.fixedHeader.min.js"></script>
<!-- Add the datatables library JS -->
<script type="text/javascript" src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js"></script>
<!-- <link rel="stylesheet" href="../css/overview.css"> -->
<!-- Add the column filtering plugin JS -->
<script type="text/javascript" src="https://cdn.rawgit.com/rewonc/jquery.dataTables.columnFilter/v1.5.6/dist/jquery.dataTables.columnFilter.js"></script>
	<title>OVERVIEW</title>
  <style>
/* css reset */
/* CSS Reset */
/* Set default margin and padding to 0 for all elements */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
/* Set default font family and size */
html {
  font-family: sans-serif;
  font-size: 16px;
  zoom: 90%
}
/* Remove list styles for all lists */
/* Remove default styling for links */
a {
  /* color:; */
  background-color: none;
  text-decoration: none;
}
/* End CSS Reset */
    #header{
      display: flex;
      justify-content: center;
      /* background-color: #00d904; */
      width: 100%;
    }
    body {
        height: 40rem;
        width: 90.75rem;
        background: rgb(0, 206, 161);
        font-family: "Abadi", sans-serif;

    }
    #navbar{
      background-color: rgb(0, 74, 132);
      height: 9.2%;
      margin: 1.2%;
      width: 100%;
      display: flex;
      justify-content: end;
    }
    #fixedheader{
      position: fixed;
     
    }
  #btnnav{
  background-color: lightgrey;
  display: flex;
  justify-content: end;
  align-items: center;
  margin-left: 1.2%;
  margin-right: 1.2%;
  margin-top:-1.6%;
  height: 40px;
  width: 100%
}
/* Styling for the header */
#parentele {
    display: flex;
    justify-content: center;
    border: 4px solid lightgrey;
    height: 80%;
    margin-left: 1.2%;
    margin-right: 1.2%;
    margin-top: -7px;
    background-color: white;
    width: 100%
}
.left-nav {
  position: absolute;
  /* top: 150; */
  left: 1.5%;
  width: 13em;
  font-size:medium;
  color: black;
  box-shadow: inset 2px 2px 4px rgba(17, 17, 17, 0.596);
    border: 1px solid rgba(15, 18, 18, 0.419);
  padding: 2.5em;
  margin: 0.0em;
  
  height: 31.125em;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  /* overflow-y: auto; */
  /* border: 1px solid rgb(0, 206, 161); */
  border-radius: 0.5em;
  
  /* transition: left 0.5s ease-out; */
 
}

.left-nav header {
    margin-bottom: 1em;
  }
  .left-nav input[type="radio"] {
    margin-right: 0.6em;
  }



#mainele {
        border: 2px solid black;
        height: 99%;
        width: 70%;
        background-color: whitesmoke;
        /* left: 50%; */
        /* right: 0; */
        /* margin-left: 20px; */
        /* margin-right: 10px; */
        bottom: 0;
        overflow-x: scroll;
        white-space: nowrap;
    }
  
  
#header {
    /* color: black; */
    padding: 10px;
    box-sizing: border-box;
    text-align: center;
    
 }
#header h1{
      font-size: 40px; 
      margin-top:12px;  
      /* font-style:italic;  */
      font-family:'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode',Verdana, sans-serif;
      box-shadow: rgba(0, 0, 0, 0.5);
      text-shadow:  3px 3px 4px rgba(0, 0, 0, 0.5);
      border-radius: 25px;
      width: 400px;     
      color: white;
      text-align: center;
}

    /* Styling for the left side navbar */

    /* Styling for the right side navbar */
.right-nav {
    position: absolute;
    margin-top:0.0em;
    width: 15.5em;
    font-size:small;
    margin-left: 78.5em;
    height: 38.15em;
    /* background-color: white; */
    color: black;
    padding: 2.5em;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    overflow: hidden;
    box-shadow: inset 2px 2px 4px rgba(17, 17, 17, 0.596);
    border: 1px solid rgba(15, 18, 18, 0.419);
    border-radius: 0.5em;
    /* line-height: 0.5; */
}

/* Styling for the headings in side navbars */
.left-nav h2,
.right-nav h2 {
    margin: 0;
    padding: 1px;
    text-align: center;
}
  
/* Styling for the links in side navbars */
.left-nav ul,
.right-nav ul {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
}
  
  .left-nav li,
  .right-nav li {
      width: 100%;
      margin: 10px 0;
  }

    .left-nav a,
    .right-nav a {
        color: black;
        text-decoration: none;
        width: 100%;
        display: block;
        padding: 10px;
        box-sizing: border-box;
        text-align: center;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }
  
    .left-nav a:hover,
  .right-nav a:hover {
      background-color: #555;
  }
  
  
      /* Customize column filter inputs */
  .dataTables_filter input {
    padding: 5px;
    border: 1px solid #ddd;
    border-radius: 4px;
    margin-bottom: 5px;
  }
  
.dataTables_filter input:focus {
  outline: none;
  box-shadow: 0 0 3px #ddd;
}
  /* Style the table */
  table {
    width: 90%;
    border-collapse: collapse;
    /* margin-bottom: 10px; */
  }
  
  /* Style the table headers */
  th {
    background-color: #f2f2f2;
    text-align: center;
    padding: 0.5px;
    font-size: 9.6px;
    border:0.2px solid #6c757d;
  }
  .header-row1{
    background-color: #f2f2f2;
    text-align: center;
    padding: 1px;
    font-size: 15px;
    border:0.2px solid #6c757d;
    background-color: rgb(0, 74, 132);
    color: white;
  }
  
  /* Style the table rows */
  tr:nth-child(even) {
    background-color: #f2f2f2;
  }
  
  tr:hover {
    background-color: #ddd;
  }
  /* Style the table cells */
  td {
    border: 1px solid #ddd;
    padding: 1px;
    font-size:small;
    text-align: center;
    font-family:cursive;
  }
  td:first-child {
  text-align: left;
}
  .box {
    background-color:rgb(0, 74, 132);
    color: white;
    border: 1px solid #ddd;
    border-radius: 5px;
    padding: 4px;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
    transition: box-shadow 0.3s ease;
  }
  
  .box:hover {
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
  }
  
  .box h2 {
    margin: 20px;
  }
  .box2 {
    background-color: #f4f0f0;
    border: 1px solid #ddd;
    border-radius: 5px;
    padding: 10px;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
    transition: box-shadow 0.3s ease;
    width:800px;
    margin-left: 450px;
  }
  th{
    background-color: rgb(0, 74, 132);
    color: white;
  } 
  /* .loader {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border: 4px solid rgba(0, 0, 0, 0.1);
  border-top-color: rgb(0, 206, 161);;
  border-radius: 50%;
  width: 50px;
  height: 50px;
  animation: spin 1s ease-in-out infinite;
}
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
} */

.loader {
  height: 20px;
  width: 250px;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  margin-right: -10%;
  display: none;
  transform-origin: center;
}

.loader--dot {
  animation: loader 1.5s ease-in-out infinite;
  height: 20px;
  width: 20px;
  border-radius: 100%;
  background-color: black;
  position: absolute;
  border: 2px solid white;
  margin-left: 300%;
  margin-top: 165%;
  transform-origin: center;
}

.loader--dot:first-child {
  background-color: #8cc759;
  animation-delay: 0.5s;
}

.loader--dot:nth-child(2) {
  background-color: #8c6daf;
  animation-delay: 0.4s;
}

.loader--dot:nth-child(3) {
  background-color: #ef5d74;
  animation-delay: 0.3s;
}

.loader--dot:nth-child(4) {
  background-color: #f9a74b;
  animation-delay: 0.2s;
}

.loader--dot:nth-child(5) {
  background-color: #60beeb;
  animation-delay: 0.1s;
}

.loader--dot:nth-child(6) {
  background-color: #fbef5a;
  animation-delay: 0s;
}

.loader--text {
  position: absolute;
  left: 0;
  right: 0;
  width: 4rem;
  margin-left: 290%;
  margin-top: 165%;
  display: flex;
  justify-content: center;
}

.loader--text:after {
  content: "Loading";
  font-weight: bold;
  animation: loading-text 3s infinite;
  position: absolute;
  display: flex;
  justify-content: center;
}

@keyframes loader {
  0% {
    transform: rotate(0) translateX(100px) rotate(0);
  }
  100% {
    transform: rotate(360deg) translateX(100px) rotate(-360deg);
  }
}

@keyframes loading-text {
  0% {
    content: "Loading";
  }
  25% {
    content: "Loading.";
  }
  50% {
    content: "Loading..";
  }
  75% {
    content: "Loading...";
  }
}

/* Zooming effect */
.zoom {
  animation: zoom 0.3s ease-in-out;
}

@keyframes zoom {
  from {
    transform: scale(1);
  }
  to {
    transform: scale(1.5);
  }
}


.btn {
      padding: 0.5px;
      margin: 0.5px;
      width: 30px;
      background-color: #16160b;
      color: #fff;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      width: auto;
    }
    .btn:hover {
      background-color:rgb(0, 206, 161);
    }
    .btn.active:hover {
  background-color:rgb(0, 206, 161);
}
.btn.active {
  background-color: #00d904;
  
}

.fixedheader:first-of-type {
  position: sticky;
  left: 0;
  /* your styles here */
}
#datatable tbody td:first-child {
  position: sticky;
  left: 0;
  z-index: 1;
  background-color: white;
}



  </style>
</head>
<body>
	<!-- Header -->
		<div id="header">
			<h1 >OVERVIEW</h1>
		  </div>
  <div id="navbar">
    <!-- <nav class="top-nav "> -->
      <!-- <a href="/constituency" title="NextView">
        <img src="./b.png" alt="NextView" width="120" height="35">
      </a>
      -->
			<a href="/homepage" title="HomePage">
        <img src="./c.png" alt="Home" width="65" height="65" style="margin-top:-4.5px;">
      </a>
      <a href="/logout" title="Logout">
        <img src="d.png" alt="Logout" width="45" height="50" style="margin-right:13px; display: flex;margin-top:0.5px;" >
      </a>
    
	<!-- </nav> -->
  </div>
  <div id="btnnav" >
    <div id="hidden" style="display: none;">
      <button class="btn btn-warning" name='TDPFull' id="TDPFull" >TDP CONTESTS</button>
      <button class="btn btn-warning" name='JSPFull' id="JSPFull" >JSP CONTESTS</button>
      <button class="btn btn-warning" name='TDPJSPAlliance' id="TDPJSPAlliance-btn" style="margin-right: 0.9rem;">ALLIANCE SHIFT</button> <!-- for '/TDPJSPAlliance' route -->
      </div>
  </div>
	<div id="parentele">
  
		<div>
		  <nav class="left-nav">
			<!-- <div class="box">
				<h2>Overview</h2>
			  </div> -->
			<header class="" style ='margin-top:28px;'>
			  <h4>SELECTION</h4>
			</header>
			<!-- <form id="form" method="get" action="/DPC_Data"> -->
			  <ul style="margin-left:-47px;">
				<!-- <span>See By</span> -->
				<li><input type="radio" name="selectedOption" value="District">DISTRICTS</li>
				<li><input type="radio" name="selectedOption" value="PARLIAMENT">PARLIAMENT</li>
				<li><input type="radio" name="selectedOption" value="RCaste">CASTE</li>
			  </ul>
			  <button id="submit" name="DPC" class="btn btn-dark"  style="margin-top: 60px; width:100px; height:50px;border-radius: 15px;">SUBMIT</button> <!-- for '/DPC' route -->

			<!-- </form> -->
		  </nav>
      <nav class="right-nav" id="nav-right" style="display:none;">
        <div class="" style ='margin-top:28px;'>
          <h3>FILTERS</h3>
          </div>
          <section style="margin:5px;">
            <label  style="display: block; margin-bottom: 5px; margin-left:-27px">District</label>
            <select  id="district" style="padding: 5px; margin-bottom: 5px;margin-left:-27px"">
            </select>
          </section>
          <section style="margin: 5px;">
            <label  style="display: block; margin-bottom: 5px;margin-left:-27px">Parliament</label>
            <select  id="parliament" style="padding: 5px; margin-bottom: 5px;margin-left:-27px">
              <option value="selectparliament">Select Parliament</option>
            </select>
          </section>
          
        <section style="margin: 5px;">
          <label style="display: block; margin-bottom: 5px;margin-left:-27px">Caste</label>
          <select  id="Caste" style="padding: 5px; margin-bottom: 5px;margin-left:-27px"  >
            <option  value="">Select Caste</option>
          </select>
        </section>
        <section style="margin: 5px;">
          <label for="weekDropdown" style="display: block; margin-bottom: 5px;margin-left:-27px">AGE</label>
          <select id="age" style="padding: 5px; margin-bottom: 5px;margin-left:-27px">
            <option value="">Select Age</option>
            <option value="18-30">18-30</option>
            <option value="30-45">30-45</option>
            <option value="45-60">45-60</option>
            <option value="60+">60+</option>
          </select>
        </section>
        <section style="margin: 5px;">
          <label for="Gender" style="display: block; margin-bottom: 5px;margin-left:-27px">Gender</label>
          <select name="Gender" id="Gender" style="padding: 5px; margin-bottom: 5px;margin-left:-27px"">
            <option value="">Select Gender</option>
            <option value="Male">Male</option>
            <option value="Female">Female</option>
          </select>
        </section>
        <button id="left-nav-btn" class="btn btn-primary" style="padding: 5px; margin: 5px;  width:100px; height:50px;border-radius: 15px;margin-top: 20px;margin-left: 19px;">SUBMIT</button>
        <button id="left-nav-btn2" class="btn btn-danger" style="padding: 5px; margin: 5px;  width:100px; height:50px;border-radius: 15px;background-color: #00d904;margin-top: 20px;margin-left: 19px; display:none">SUBMIT</button>
        <button id="tdpBtn" class="btn btn-danger" style="padding: 5px; margin: 5px; width:100px; height:50px;border-radius: 15px; background-color: red;margin-top: 20px;margin-left: 19px; display:none">SUBMIT</button>
        <button id="jspBtn" class="btn btn-danger" style="padding: 5px; margin: 5px; width:100px; height:50px;border-radius: 15px; background-color:yellow;margin-top: 20px;margin-left: 19px; display:none">SUBMIT</button>
      </nav>
		</div>
		<div id="mainele"></div>
    <div id="loader" class="loader">
      <div class="loader--dot"></div>
      <div class="loader--dot"></div>
      <div class="loader--dot"></div>
      <div class="loader--dot"></div>
      <div class="loader--dot"></div>
      <div class="loader--dot"></div>
      <div class="loader--text"></div>
    </div>
</div>

  

    
</body>
<script src="./js/inactivity.js"></script>    
<script>

// get all buttons and add click event listener to each one
const buttons = document.querySelectorAll('.btn');
buttons.forEach(button => {
  button.addEventListener('click', function() {
    // remove 'active' class from all buttons
    buttons.forEach(b => b.classList.remove('active'));
    // add 'active' class to clicked button
    this.classList.add('active');
  });
});
  const submitbtn = document.querySelector('#submit')
  submitbtn.addEventListener('click',getData)
  const filterbtn = document.querySelector('#left-nav-btn')  //for data filter----
  filterbtn.addEventListener('click',getFilteredData)
  const getParliament = document.querySelector('#parliament')
  const districtDropdown = document.querySelector('#district')
  const getCaste = document.querySelector('#Caste')
  axios.get('/districts')
  .then(response => {
    const districts = response.data;
    // Populate district dropdown
    districtDropdown.innerHTML = '<option value="">Select a district</option>';
    districts.forEach(district => {
      const option = document.createElement('option');
      option.value = district;
      option.textContent = district;
      districtDropdown.appendChild(option);
    });
  })
  .catch(error => {
    console.log(error);
  });
//getting parliament value based on district-----
districtDropdown.addEventListener('change',async function(){
  const getDistrict = this.value
  getDistrict.innerHTML = '<option value="">Select a district</option>';
  let parliament2 = [];
  // console.log('PARLIAM VAL',valparliament)
  let res = await axios.get('/parliament',{params:{District:getDistrict}})
  // .then((res)=>{
    getParliament.innerHTML = ''
    getParliament.innerHTML = '<option value="">Select Parliament</option>'
    let parliament = res.data
    parliament.forEach(val =>{
    const option = document.createElement('option');
    option.value = val;
    option.textContent = val;
    getParliament.appendChild(option)
  })
  await axios.get('/dist_caste',{params:{District:getDistrict}}).then((res)=>{
    const caste = res.data
    // console.log(caste,'casteData')
    getCaste.innerHTML = ''
    getCaste.innerHTML =  '<option value="">Select Caste</option>'
    caste.forEach(val =>{
    const option = document.createElement('option');
    option.value = val;
    option.textContent = val;
    getCaste.appendChild(option)
    })
  })
})
//getting caste values based on 
getParliament.addEventListener('change',async function(){
  const parliament = getParliament.value
  const getDistrict = districtDropdown.value
  // console.log(`parliament is ${parliament}`)
  axios.get('/caste',{params:{District:getDistrict,parliament:parliament}}).then((res)=>{
    const caste = res.data
    getCaste.innerHTML = ''
    getCaste.innerHTML =  '<option value="">Select Caste</option>'
    caste.forEach(val =>{
    const option = document.createElement('option');
    option.value = val;
    option.textContent = val;
    getCaste.appendChild(option)
    })
  })
})
async function  getData(e){
  document.getElementById("hidden").style.display = 'block';
  const selectedOption = document.querySelector('input[name="selectedOption"]:checked')?.value;
  if (!selectedOption) {
    alert("Please select an option.");
    return;
  }
  document.getElementById("nav-right").style.display = 'block';
  e.preventDefault()
// Add a loader to the page
  const loader = document.getElementById('loader');
      loader.style.display = 'block';
    // const selectedOption = document.querySelector('input[name="selectedOption"]:checked').value;
    const response1 =  await  axios.post('/DPC_Data', {selectedOption:selectedOption});
  let data = response1.data
  try {
  const mainele = document.getElementById("mainele");
  mainele.innerHTML = ''
    mainele.innerHTML = `
      <table id="datatable">
        <thead>
          <tr class="header-row">
            ${Object.keys(data[0]).map((key, index) => `
            <th class="header-row1">
              ${key}
              ${index === 0 ? `
            ` : ''}
            </th>`).join("")}
          </tr>
        </thead>
        <tbody style="text-align:center;font-size: 13px; font-family;cursive; color:black">
          ${data.map(row => `
            <tr>
              ${Object.values(row).map(value => `<td>${value}</td>`).join("")}
            </tr>
          `).join("")}
        </tbody>
      </table>
    `;
    // Initialize DataTable plugin with pagination and column filtering options
    $(document).ready(function() {
      const table = $('#datatable').DataTable({
        "paging": false,
        scrollY: '400px',
        scrollCollapse: true,
        "ordering": false,
        "searching": true,
        "columnDefs": [
          { "targets": '_all', "searchable": true },
          { "targets": '_all', "sortable": false }
        ],
        // "fixedHeader": true,
        // "headerOffset": $(".header-row").height()
      });
      $('.search-input').on('keyup', function () {
        const columnIdx = $(this).parent().index();
        const searchValue = $(this).val();
        table.column(columnIdx).search(searchValue).draw();
      });
      $('.filter-dropdown').on('change', function () {
        const columnIdx = $(this).parent().index();
        const filterValue = $(this).val();
        table.column(columnIdx).search(filterValue).draw();
      });
    });
} catch (error) {
  console.error(error);
}
finally {
  // Remove the loader from the page
  loader.style.display = 'none';
}
}
async function getFilteredData(e){
  e.preventDefault()
  // Add a loader to the page
    const loader = document.getElementById('loader');
      loader.style.display = 'block';
  const District = document.querySelector('#district').value
  const PARLIAMENT = document.querySelector('#parliament').value
  const Caste = document.querySelector('#Caste').value
  const Gender = document.querySelector('#Gender').value
  const age =document.querySelector('#age').value
  const selectedOption = document.querySelector('input[name="selectedOption"]:checked').value;  
  console.log(Caste)
  
  const response1 = await  axios.post('/DPC_Data', {selectedOption:selectedOption,Gender:Gender,Caste:Caste,age:age,
    District:District,PARLIAMENT:PARLIAMENT});
  let data = response1.data
  // console.log(data)
  try {
    const mainele = document.getElementById("mainele");
  mainele.innerHTML = ''
    mainele.innerHTML = `
      <table id="datatable">
        <thead>
          <tr class="header-row">
            ${Object.keys(data[0]).map((key, index) => `
            <th class="header-row1">
              ${key}
              ${index === 0 ? `
            ` : ''}
            </th>`).join("")}
          </tr>
        </thead>
        <tbody style="text-align:center;font-size: 13px; font-family;cursive; color:black">
          ${data.map(row => `
            <tr>
              ${Object.values(row).map(value => `<td>${value}</td>`).join("")}
            </tr>
          `).join("")}
        </tbody>
      </table>
    `;
    // Initialize DataTable plugin with pagination and column filtering options
    $(document).ready(function() {
      const table = $('#datatable').DataTable({
        "paging": false,
        scrollY: '400px',
        scrollCollapse: true,
        "ordering": false,
        "searching": true,
        "columnDefs": [
          { "targets": '_all', "searchable": true },
          { "targets": '_all', "sortable": false }
        ],
        // "fixedHeader": true,
        // "headerOffset": $(".header-row").height()
      });
      $('.search-input').on('keyup', function () {
        const columnIdx = $(this).parent().index();
        const searchValue = $(this).val();
        table.column(columnIdx).search(searchValue).draw();
      });
      $('.filter-dropdown').on('change', function () {
        const columnIdx = $(this).parent().index();
        const filterValue = $(this).val();
        table.column(columnIdx).search(filterValue).draw();
      });
    });
  }catch(error){
    console.error(error);
  }
  finally {
    // Remove the loader from the page
    loader.style.display = 'none';
  }
 
}
const TDPJSPAlliancebtn = document.querySelector('#TDPJSPAlliance-btn')
TDPJSPAlliancebtn .addEventListener('click',TDPJSPAlliance)
async function  TDPJSPAlliance(e){
  const selectedOption = document.querySelector('input[name="selectedOption"]:checked')?.value;
  if (!selectedOption) {
    alert("Please select an option.");
    return;
  }
    document.getElementById('left-nav-btn').style.display = 'none'
    document.getElementById('left-nav-btn2').style.display = 'block'
    document.getElementById('jspBtn').style.display = 'none'
    document.getElementById('tdpBtn').style.display = 'none'
  e.preventDefault()
// Add a loader to the page
  const loader = document.getElementById('loader');
      loader.style.display = 'block';
  
    // const selectedOption = document.querySelector('input[name="selectedOption"]:checked').value;
    const response1 =  await  axios.post('/TDPJSPAlliance', {selectedOption:selectedOption});
  let data = response1.data
  
  try {
    const mainele = document.getElementById("mainele");
  mainele.innerHTML = `
    <table id="datatable">
      <thead>
        <tr class="header-row" >
          <th></th>
          <th colspan="3" style="background-color: gray;font-size:15px">OVERALL</th>
          <th colspan="3" style="background-color: yellow;font-size:15px">TDP CONTESTS</th>
          <th colspan="3" style="background-color: red;font-size:15px">JSP CONTESTS</th>
        </tr>
        <tr class="header-row">
          ${Object.keys(data[0]).map((key, index) => {
            if (index >= 4 && index <= 9) {
              switch (index) {
                case 4:
                  return `<th class='fixedheader' >YSRCP</th>`;
                case 5:
                  return `<th class='fixedheader'>TDP_JSP</th>`;
                case 6:
                  return `<th class='fixedheader'>Will Not Vote</th>`;
                  case 7:
                  return `<th class='fixedheader'>YSRCP</th>`;
                case 8:
                  return `<th class='fixedheader'>TDP_JSP</th>`;
                case 9:
                  return `<th class='fixedheader'>Will Not Vote</th>`;
                default:
                  return `<th class='fixedheader'>${key}</th>`;
              }
            } else {
              return `<th class='fixedheader'>${key}</th>`;
            }
          }).join("")}
        </tr>
      </thead>
      <tbody>
        ${data.map(row => `
          <tr>
            ${Object.values(row).map((value, index) => {
              if (index >= 1 && index <= 9) {
                return `<td style="text-align:center;font-size: 13px; font-family;cursive; color:black">${value}</td>`;
              } else {
                return `<td>${value}</td>`;
              }
            }).join("")}
          </tr>
        `).join("")}
      </tbody>
    </table>
  `;
  // Initialize DataTable plugin with pagination and column filtering options
  $(document).ready(function() {
      const table = $('#datatable').DataTable({
        "paging": false,
        scrollY: '400px',
        scrollCollapse: true,
        "ordering": false,
        "searching": true,
        "columnDefs": [
          { "targets": '_all', "searchable": true },
          { "targets": '_all', "sortable": false }
        ],
        // "fixedHeader": true,
        // "headerOffset": $(".header-row").height()
      });
      $('.search-input').on('keyup', function () {
        const columnIdx = $(this).parent().index();
        const searchValue = $(this).val();
        table.column(columnIdx).search(searchValue).draw();
      });
      $('.filter-dropdown').on('change', function () {
        const columnIdx = $(this).parent().index();
        const filterValue = $(this).val();
        table.column(columnIdx).search(filterValue).draw();
      });
    });
    
  } catch (error) {
    console.error(error);
  }
  finally {
    // Remove the loader from the page
    loader.style.display = 'none';
  }
}
//filter data fir TDPJSPALLIANCE
document.getElementById('left-nav-btn2').addEventListener('click',getFilteredData2)
async function getFilteredData2(e){
    console.log('btn is clicked....')
  e.preventDefault()
  // Add a loader to the page
    const loader = document.getElementById('loader');
      loader.style.display = 'block';
  const District = document.querySelector('#district').value
  const PARLIAMENT = document.querySelector('#parliament').value
  const Caste = document.querySelector('#Caste').value
  const Gender = document.querySelector('#Gender').value
  const age =document.querySelector('#age').value
  const selectedOption = document.querySelector('input[name="selectedOption"]:checked').value;  
  console.log(Caste)
  
  const response1 = await  axios.post('/TDPJSPAlliance', {selectedOption:selectedOption,Gender:Gender,Caste:Caste,age:age,
    District:District,PARLIAMENT:PARLIAMENT});
  let data = response1.data
  // console.log(data)
  try {
    const mainele = document.getElementById("mainele");
    mainele.innerHTML = `
    <table id="datatable">
      <thead>
        <tr class="header-row" >
          <th></th>
          <th colspan="3" style="background-color: gray;font-size:15px">OVERALL</th>
          <th colspan="3" style="background-color: yellow;font-size:15px">TDP CONTESTS</th>
          <th colspan="3" style="background-color: red;font-size:15px">JSP CONTESTS</th>
        </tr>
        <tr class="header-row">
          ${Object.keys(data[0]).map((key, index) => {
            if (index >= 4 && index <= 9) {
              switch (index) {
                case 4:
                  return `<th class='fixedheader' >YSRCP</th>`;
                case 5:
                  return `<th class='fixedheader'>TDP_JSP</th>`;
                case 6:
                  return `<th class='fixedheader'>Will Not Vote</th>`;
                  case 7:
                  return `<th class='fixedheader'>YSRCP</th>`;
                case 8:
                  return `<th class='fixedheader'>TDP_JSP</th>`;
                case 9:
                  return `<th class='fixedheader'>Will Not Vote</th>`;
                default:
                  return `<th class='fixedheader'>${key}</th>`;
              }
            } else {
              return `<th class='fixedheader'>${key}</th>`;
            }
          }).join("")}
        </tr>
      </thead>
      <tbody>
        ${data.map(row => `
          <tr>
            ${Object.values(row).map((value, index) => {
              if (index >= 1 && index <= 9) {
                return `<td style="text-align:center;font-size: 13px; font-family;cursive; color:black">${value}</td>`;
              } else {
                return `<td>${value}</td>`;
              }
            }).join("")}
          </tr>
        `).join("")}
      </tbody>
    </table>
  `;
  // Initialize DataTable plugin with pagination and column filtering options
  $(document).ready(function() {
      const table = $('#datatable').DataTable({
        "paging": false,
        scrollY: '400px',
        scrollCollapse: true,
        "ordering": false,
        "searching": true,
        "columnDefs": [
          { "targets": '_all', "searchable": true },
          { "targets": '_all', "sortable": false }
        ],
        // "fixedHeader": true,
        // "headerOffset": $(".header-row").height()
      });
      $('.search-input').on('keyup', function () {
        const columnIdx = $(this).parent().index();
        const searchValue = $(this).val();
        table.column(columnIdx).search(searchValue).draw();
      });
      $('.filter-dropdown').on('change', function () {
        const columnIdx = $(this).parent().index();
        const filterValue = $(this).val();
        table.column(columnIdx).search(filterValue).draw();
      });
    });
  }catch(error){
    console.error(error);
  }
  finally {
    // Remove the loader from the page
    loader.style.display = 'none';
  }
}
//tdp fullData---
document.getElementById('TDPFull').addEventListener('click',TDPFull)
async function TDPFull(e){ 
  const selectedOption = document.querySelector('input[name="selectedOption"]:checked')?.value;
  if (!selectedOption) {
    alert("Please select an option.");
    return;
  }
    document.getElementById('left-nav-btn').style.display = 'none'
    document.getElementById('left-nav-btn2').style.display = 'none'
    document.getElementById('jspBtn').style.display = 'none'
    document.getElementById('tdpBtn').style.display = 'block'
    e.preventDefault()
    const loader = document.getElementById('loader');
      loader.style.display = 'block';
  
    // const selectedOption = document.querySelector('input[name="selectedOption"]:checked').value;
    const response1 =  await  axios.post('/tdpfull', {selectedOption:selectedOption});
  let data = response1.data
  
  try {
    const mainele = document.getElementById("mainele");
  mainele.innerHTML = ''
    mainele.innerHTML = `
      <table id="datatable">
        <thead>
          <tr class="header-row">
            ${Object.keys(data[0]).map((key, index) => `
            <th style="position:sticky" class="header-row1">
              ${key}
              ${index === 0 ? `
            ` : ''}
            </th>`).join("")}
          </tr>
        </thead>
        <tbody style="text-align:center;font-size: 13px; font-family;cursive; color:black">
          ${data.map(row => `
            <tr>
              ${Object.values(row).map(value => `<td>${value}</td>`).join("")}
            </tr>
          `).join("")}
        </tbody>
      </table>
    `;
    // Initialize DataTable plugin with pagination and column filtering options
    $(document).ready(function() {
        const table = $('#datatable').DataTable({
          "paging": false,
          scrollY: '400px',
          // scrollX: true,
          // scrollCollapse: true,
          "ordering": false,
          "searching": true,
          "columnDefs": [
            { "targets": '_all', "searchable": true },
            { "targets": '_all', "sortable": false }
          ],
          // "fixedHeader": true,
          // "headerOffset": $(".header-row").height()
        });
        $('.search-input').on('keyup', function () {
          const columnIdx = $(this).parent().index();
          const searchValue = $(this).val();
          table.column(columnIdx).search(searchValue).draw();
        });
        $('.filter-dropdown').on('change', function () {
          const columnIdx = $(this).parent().index();
          const filterValue = $(this).val();
          table.column(columnIdx).search(filterValue).draw();
        });
      });  
    
  } catch (error) {
    console.error(error);
  }
  finally {
    // Remove the loader from the page
    loader.style.display = 'none';
  }
}
//filtering tdpfull----
const tdpBtn = document.getElementById('tdpBtn')
tdpBtn.addEventListener('click',getFilterTDP)
async function getFilterTDP(e){
    console.log('btn clicked...')
   
   
    const District = document.querySelector('#district').value
    const PARLIAMENT = document.querySelector('#parliament').value
    const Caste = document.querySelector('#Caste').value
    const Gender = document.querySelector('#Gender').value
    const age =document.querySelector('#age').value
    e.preventDefault()
    const loader = document.getElementById('loader');
      loader.style.display = 'block';
  
    const selectedOption = document.querySelector('input[name="selectedOption"]:checked').value;  
    console.log(Caste)
  
    
    const response1 = await  axios.post('/tdpfull', {selectedOption:selectedOption,Gender:Gender,Caste:Caste,age:age,
      District:District,PARLIAMENT:PARLIAMENT});
    let data = response1.data
    // console.log(data)
    try {
      const mainele = document.getElementById("mainele");
    mainele.innerHTML = ''
      mainele.innerHTML = `
        <table id="datatable">
          <thead>
            <tr class="header-row">
              ${Object.keys(data[0]).map((key, index) => `
              <th class="header-row1">
                ${key}
                ${index === 0 ? `
              ` : ''}
              </th>`).join("")}
            </tr>
          </thead>
          <tbody style="text-align:center;font-size: 13px; font-family;cursive; color:black">
            ${data.map(row => `
              <tr>
                ${Object.values(row).map(value => `<td>${value}</td>`).join("")}
              </tr>
            `).join("")}
          </tbody>
        </table>
      `;
      $(document).ready(function() {
        const table = $('#datatable').DataTable({
          "paging": false,
          scrollY: '400px',
          // scrollX: true,
          // scrollCollapse: true,
          "ordering": false,
          "searching": true,
          "columnDefs": [
            { "targets": '_all', "searchable": true },
            { "targets": '_all', "sortable": false }
          ],
          // "fixedHeader": true,
          // "headerOffset": $(".header-row").height()
        });
        $('.search-input').on('keyup', function () {
          const columnIdx = $(this).parent().index();
          const searchValue = $(this).val();
          table.column(columnIdx).search(searchValue).draw();
        });
        $('.filter-dropdown').on('change', function () {
          const columnIdx = $(this).parent().index();
          const filterValue = $(this).val();
          table.column(columnIdx).search(filterValue).draw();
        });
      });  
    }catch(error){
      console.error(error);
    }
    finally {
      // Remove the loader from the page
      loader.style.display = 'none';
    }
  }
//jsp full data---
document.getElementById('JSPFull').addEventListener('click',JSPFull)
async function JSPFull(e){ 
  const selectedOption = document.querySelector('input[name="selectedOption"]:checked')?.value;
  if (!selectedOption) {
    alert("Please select an option.");
    return;
  }
    document.getElementById('left-nav-btn').style.display = 'none'
    document.getElementById('left-nav-btn2').style.display = 'none'
    document.getElementById('jspBtn').style.display = 'block'
    document.getElementById('tdpBtn').style.display = 'none'
    e.preventDefault()
    const loader = document.getElementById('loader');
      loader.style.display = 'block';
  
    // const selectedOption = document.querySelector('input[name="selectedOption"]:checked').value;
    const response1 =  await  axios.post('/jspfull', {selectedOption:selectedOption});
  let data = response1.data
  
  try {
    const mainele = document.getElementById("mainele");
  mainele.innerHTML = ''
    mainele.innerHTML = `
      <table id="datatable">
        <thead>
          <tr class="header-row">
            ${Object.keys(data[0]).map((key, index) => `
            <th class="header-row1">
              ${key}
              ${index === 0 ? `
            ` : ''}
            </th>`).join("")}
          </tr>
        </thead>
        <tbody style="text-align:center;font-size: 13px; font-family;cursive; color:black">
          ${data.map(row => `
            <tr>
              ${Object.values(row).map(value => `<td>${value}</td>`).join("")}
            </tr>
          `).join("")}
        </tbody>
      </table>
    `;
    // Initialize DataTable plugin with pagination and column filtering options
    $(document).ready(function() {
        const table = $('#datatable').DataTable({
          "paging": false,
          scrollY: '400px',
          // scrollX: true,
          // scrollCollapse: true,
          "ordering": false,
          "searching": true,
          "columnDefs": [
            { "targets": '_all', "searchable": true },
            { "targets": '_all', "sortable": false }
          ],
          // "fixedHeader": true,
          // "headerOffset": $(".header-row").height()
        });
        $('.search-input').on('keyup', function () {
          const columnIdx = $(this).parent().index();
          const searchValue = $(this).val();
          table.column(columnIdx).search(searchValue).draw();
        });
        $('.filter-dropdown').on('change', function () {
          const columnIdx = $(this).parent().index();
          const filterValue = $(this).val();
          table.column(columnIdx).search(filterValue).draw();
        });
      });  
  } catch (error) {
    console.error(error);
  }
  finally {
    // Remove the loader from the page
    loader.style.display = 'none';
  }
}
//filtering jspFull--
const jspBtn = document.getElementById('jspBtn')
console.log(jspBtn)
jspBtn.addEventListener('click',getFilterJSP)
async function getFilterJSP(e){
    console.log('btn clicked...')
   
    const District = document.querySelector('#district').value
    const PARLIAMENT = document.querySelector('#parliament').value
    const Caste = document.querySelector('#Caste').value
    const Gender = document.querySelector('#Gender').value
    const age =document.querySelector('#age').value
    e.preventDefault()
    const loader = document.getElementById('loader');
      loader.style.display = 'block';
    const selectedOption = document.querySelector('input[name="selectedOption"]:checked').value;  
    console.log(Caste)
  
    
    const response1 = await  axios.post('/jspfull', {selectedOption:selectedOption,Gender:Gender,Caste:Caste,age:age,
      District:District,PARLIAMENT:PARLIAMENT});
    let data = response1.data
    // console.log(data)
    try {
      const mainele = document.getElementById("mainele");
    mainele.innerHTML = ''
      mainele.innerHTML = `
        <table id="datatable">
          <thead>
            <tr class="header-row">
              ${Object.keys(data[0]).map((key, index) => `
              <th class="header-row1">
                ${key}
                ${index === 0 ? `
              ` : ''}
              </th>`).join("")}
            </tr>
          </thead>
          <tbody>
            ${data.map(row => `
              <tr>
                ${Object.values(row).map(value => `<td>${value}</td>`).join("")}
              </tr>
            `).join("")}
          </tbody style="text-align:center;font-size: 13px; font-family;cursive; color:black">
        </table>
      `;
      // Initialize DataTable plugin with pagination and column filtering options
      $(document).ready(function() {
        const table = $('#datatable').DataTable({
          "paging": false,
          scrollY: '400px',
          // scrollX: true,
          // scrollCollapse: true,
          "ordering": false,
          "searching": true,
          "columnDefs": [
            { "targets": '_all', "searchable": true },
            { "targets": '_all', "sortable": false }
          ],
          // "fixedHeader": true,
          // "headerOffset": $(".header-row").height()
        });
        $('.search-input').on('keyup', function () {
          const columnIdx = $(this).parent().index();
          const searchValue = $(this).val();
          table.column(columnIdx).search(searchValue).draw();
        });
        $('.filter-dropdown').on('change', function () {
          const columnIdx = $(this).parent().index();
          const filterValue = $(this).val();
          table.column(columnIdx).search(filterValue).draw();
        });
      });  
    }catch(error){
      console.error(error);
    }
    finally {
      // Remove the loader from the page
      loader.style.display = 'none';
    }
  }
</script>
</html>