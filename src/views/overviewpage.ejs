<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" 
	integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"
	 integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN" crossorigin="anonymous"></script>
	<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

	<!-- Add the datatables library CSS -->
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.3/css/jquery.dataTables.min.css">

<!-- Add the jQuery library -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Add the datatables library JS -->
<script type="text/javascript" src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js"></script>
<!-- <link rel="stylesheet" href="../css/overview.css"> -->
<!-- Add the column filtering plugin JS -->
<script type="text/javascript" src="https://cdn.rawgit.com/rewonc/jquery.dataTables.columnFilter/v1.5.6/dist/jquery.dataTables.columnFilter.js"></script>
	<title>Overview Page</title>
  <style>
        body {
        background: linear-gradient(to bottom right, #2c3e50, #ebefce);
    }
  
    /* Styling for the header */
    #parentele {
        display: flex;
        justify-content: center;
        border: 2px solid yellow;
        height: 580px;
        /* width: 1650px; */
    }
  
    .header {
        background: linear-gradient(to bottom right, #2c3e50, #dda8d4);
        color: black;
        padding: 10px;
        box-sizing: border-box;
        text-align: center;
    }
  
    /* Styling for the left side navbar */
    .left-nav {
        position: fixed;
        /* top: 140px; */
        left: 0;
        width: 25%;
        height: 80%;
        background-color: white;
        color: black;
        padding: 20px;
        box-sizing: border-box;
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: center;
        overflow-y: auto;
        border: 1px solid blue;
        border-radius: 0.5%;
    }
  
    /* Styling for the right side navbar */
    .right-nav {
        position: fixed;
        /* top: 140px; */
        right: 0;
        width: 24%;
        height: 80%;
        background-color: white;
        color: black;
        padding: 20px;
        box-sizing: border-box;
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: center;
        overflow-y: auto;
        border: 1px solid blue;
        border-radius: 0.5%;
    }
  
    /* Styling for the headings in side navbars */
    .left-nav h2,
    .right-nav h2 {
        margin: 0;
        padding: 1px;
        text-align: center;
    }
  
    /* Styling for the links in side navbars */
    .left-nav ul,
    .right-nav ul {
        list-style: none;
        margin: 0;
        padding: 0;
        display: flex;
        flex-direction: column;
        align-items: center;
        width: 100%;
    }
  
    .left-nav li,
    .right-nav li {
        width: 100%;
        margin: 10px 0;
    }
  
    .left-nav a,
    .right-nav a {
        color: black;
        text-decoration: none;
        width: 100%;
        display: block;
        padding: 10px;
        box-sizing: border-box;
        text-align: center;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }
  
    .left-nav a:hover,
    .right-nav a:hover {
        background-color: #555;
    }
  
    #mainele {
        border: 2px solid black;
        height: 580px;
        width: 750px;
        /* left: 50%; */
        /* right: 0; */
        margin-left: 20px;
        margin-right: 10px;
        bottom: 0;
        overflow-x: scroll;
        white-space: nowrap;
    }
  
      /* Customize column filter inputs */
      .dataTables_filter input {
        padding: 8px;
        border: 1px solid #ddd;
        border-radius: 4px;
        margin-bottom: 10px;
      }
  
      .dataTables_filter input:focus {
        outline: none;
        box-shadow: 0 0 3px #ddd;
      }
  /* Style the table */
  table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 20px;
  }
  
  /* Style the table headers */
  th {
    background-color: #f2f2f2;
    text-align: left;
    padding: 8px;
    font-size: 16px;
  }
  
  /* Style the table rows */
  tr:nth-child(even) {
    background-color: #f2f2f2;
  }
  
  tr:hover {
    background-color: #ddd;
  }
  
  /* Style the table cells */
  td {
    border: 1px solid #ddd;
    padding: 8px;
  }
  .box {
    background-color: #f4f0f0;
    border: 1px solid #ddd;
    border-radius: 5px;
    padding: 4px;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
    transition: box-shadow 0.3s ease;
    width:200px;
  }
  
  .box:hover {
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
  }
  
  .box h2 {
    margin: 0;
  }
  .box2 {
    background-color: #f4f0f0;
    border: 1px solid #ddd;
    border-radius: 5px;
    padding: 10px;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
    transition: box-shadow 0.3s ease;
    width:800px;
    margin-left: 450px;
  }
  
  
 /* Add media queries for responsive design */
 @media only screen and (max-width: 1024px) {
    /* Adjust the width of the main container for tablets */
    #parentele {
      height: auto;
      flex-wrap: wrap;
    }
  
    /* Adjust the width of the left and right navbars for tablets */
    .left-nav,
    .right-nav {
      width: 35%;
    }
  
    /* Adjust the height of the main container for tablets */
    #mainele {
      height: auto;
      width: 100%;
      margin: 0px 0;
    }
    
  }
  
  @media only screen and (min-width: 1025px) {
    /* Adjust the width of the main container for desktops */
    #parentele {
      height: 580px;
    }
  
    /* Adjust the width of the left and right navbars for desktops */
    .left-nav,
    .right-nav {
      width: 25%;
    }
  
    /* Adjust the width of the main container for desktops */
    #mainele {
      width: 50%;
      margin: 0 0px;
    }
  }
  
  .loader {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border: 4px solid rgba(0, 0, 0, 0.1);
  border-top-color: #3498db;
  border-radius: 50%;
  width: 50px;
  height: 50px;
  animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
  </style>
</head>
<body>
	<!-- Header -->
	<header class="header">
		<div class="box2">
			<h1>Overview</h1>
		  </div>
	</header>
	<nav style="margin-left: 70rem;" class="top-nav ">
			<button>
				<a href="/homepage">
					<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-house-door-fill" viewBox="0 0 16 16">
						<path d="M6.5 14.5v-3.505c0-.245.25-.495.5-.495h2c.25 0 .5.25.5.5v3.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5Z"/>
					  </svg>
					</a>
			</button>
      <button>
      <a href="#">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-circle" viewBox="0 0 16 16">
          <path d="M8 1.5a6.5 6.5 0 1 0 6.5 6.5A6.508 6.508 0 0 0 8 1.5zM8 8a2 2 0 1 1 2-2A2 2 0 0 1 8 8zm4.5 4.5a5.5 5.5 0 0 1-5.5 5.5 5.5 5.5 0 0 1-5.5-5.5h11z"/>
        </svg>
      </a>
    </button>
      <button>
        <a href="/logout">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-box-arrow-right" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M3.5 3.5a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 0-1 0v2A1.5 1.5 0 0 0 3.5 13h8a1.5 1.5 0 0 0 1.5-1.5v-9a1.5 1.5 0 0 0-1.5-1.5h-8a1.5 1.5 0 0 0-1.5 1.5v2a.5.5 0 0 0 1 0v-2z"/>
            <path fill-rule="evenodd" d="M10.854 8.354a.5.5 0 0 0 0-.708L8.207 5.5H12.5a.5.5 0 0 0 0-1H8.207l2.647-2.646a.5.5 0 1 0-.708-.708l-3 3a.5.5 0 0 0 0 .708l3 3a.5.5 0 0 0 .708 0Z"/>
          </svg>
        </a>
      </button>

      <button class="btn btn-warning" id="TDPJSPAlliance-btn">TDP+JSP Alliance </button>
      
	</nav>
	<div id="parentele">
		<div>
		  <nav class="left-nav">
			<div class="box">
				<h2>Overview</h2>
			  </div>
			<header>
			  <h4>SELECTION</h4>
			</header>
			<!-- <form id="form" method="get" action="/DPC_Data"> -->
			  <ul>
				<span>See By</span>
				<li><input type="radio" name="selectedOption" value="District">DISTRICTS</li>
				<li><input type="radio" name="selectedOption" value="PARLIAMENT">PARLIAMENT</li>
				<li><input type="radio" name="selectedOption" value="RCaste">CASTE</li>
			  </ul>
			  <button id="submit" name="submit" class="btn btn-primary">Submit</button>
			<!-- </form> -->
		  </nav>
      <nav class="right-nav">
        <div class="box">
          <h2>Filters</h2>
          </div>
          <section style="margin:5px;">
            <label  style="display: block; margin-bottom: 5px;">District</label>
            <select  id="district" style="padding: 5px; margin-bottom: 5px;">
            </select>
          </section>
          <section style="margin: 5px;">
            <label  style="display: block; margin-bottom: 5px;">Parliament</label>
            <select  id="parliament" style="padding: 5px; margin-bottom: 5px;">
              <option value="selectparliament">Select Parliament</option>
            </select>
          </section>
          
        <section style="margin: 5px;">
          <label style="display: block; margin-bottom: 5px;">Caste</label>
          <select  id="Caste" style="padding: 5px; margin-bottom: 5px; " >
            <option style ='background-color: #3498db;' value="">Select Caste</option>
          </select>
        </section>
        <section style="margin: 5px;">
          <label for="weekDropdown" style="display: block; margin-bottom: 5px;">AGE</label>
          <select id="age" style="padding: 5px; margin-bottom: 5px;">
            <option value="">Select Age</option>
            <option value="18-30">18-30</option>
            <option value="30-45">30-45</option>
            <option value="45-60">45-60</option>
            <option value="60+">60+</option>
          </select>
        </section>
        <section style="margin: 5px;">
          <label for="Gender" style="display: block; margin-bottom: 5px;">Gender</label>
          <select name="Gender" id="Gender" style="padding: 5px; margin-bottom: 5px;">
            <option value="">Select Gender</option>
            <option value="Male">Male</option>
            <option value="Female">Female</option>
          </select>
        </section>
        <button id="left-nav-btn" class="btn btn-primary" style="padding: 5px; margin: 5px;">Submit</button>
      </nav>
		</div>
		<div id="mainele"></div>	
</div>
</body>
<script>
  const submitbtn = document.querySelector('#submit')
  submitbtn.addEventListener('click',getData)
  const filterbtn = document.querySelector('#left-nav-btn')  //for data filter----
  filterbtn.addEventListener('click',getFilteredData)
  const getParliament = document.querySelector('#parliament')
  const districtDropdown = document.querySelector('#district')
  const getCaste = document.querySelector('#Caste')
  axios.get('/districts')
  .then(response => {
    const districts = response.data;
    // Populate district dropdown
    districtDropdown.innerHTML = '<option value="">Select a district</option>';
    districts.forEach(district => {
      const option = document.createElement('option');
      option.value = district;
      option.textContent = district;
      districtDropdown.appendChild(option);
    });
  })
  .catch(error => {
    console.log(error);
  });
//getting parliament value based on district-----
districtDropdown.addEventListener('change',async function(){
  const getDistrict = this.value
  getDistrict.innerHTML = '<option value="">Select a district</option>';
  let parliament2 = [];
  // console.log('PARLIAM VAL',valparliament)
  let res = await axios.get('/parliament',{params:{District:getDistrict}})
  // .then((res)=>{
    getParliament.innerHTML = ''
    getParliament.innerHTML = '<option value="">Select Parliament</option>'
    let parliament = res.data
    parliament.forEach(val =>{
    const option = document.createElement('option');
    option.value = val;
    option.textContent = val;
    getParliament.appendChild(option)
  })
  await axios.get('/dist_caste',{params:{District:getDistrict}}).then((res)=>{
    const caste = res.data
    console.log(caste,'casteData')
    getCaste.innerHTML = ''
    getCaste.innerHTML =  '<option value="">Select Caste</option>'
    caste.forEach(val =>{
    const option = document.createElement('option');
    option.value = val;
    option.textContent = val;
    getCaste.appendChild(option)
    })
  })
})
//getting caste values based on 
getParliament.addEventListener('change',async function(){
  const parliament = getParliament.value
  const getDistrict = districtDropdown.value
  // console.log(`parliament is ${parliament}`)
  axios.get('/caste',{params:{District:getDistrict,parliament:parliament}}).then((res)=>{
    const caste = res.data
    getCaste.innerHTML = ''
    getCaste.innerHTML =  '<option value="">Select Caste</option>'


    caste.forEach(val =>{
    const option = document.createElement('option');
    option.value = val;
    option.textContent = val;
    getCaste.appendChild(option)
    })
  })
})
async function  getData(e){
  e.preventDefault()
// Add a loader to the page
const loader = document.createElement("div");
  loader.classList.add("loader");
  loader.style.position = "fixed";
  loader.style.top = "35%";
  loader.style.left = "42%";
  loader.style.transform = "translate(-50%, -50%)";
  loader.style.border = "25px solid rgba(0, 0, 0, 0.1)";
  loader.style.borderTopColor = "#3498db";
  loader.style.borderRadius = "75%";
  loader.style.width = "250px";
  loader.style.height = "250px";
  loader.style.animation = "spin 1s ease-in-out infinite";
//   const text = document.createElement("span");
// text.textContent = "Loading data";
// text.style.position = "absolute";
// text.style.top = "50%";
// text.style.left = "50%";
// text.style.transform = "translate(-50%, -50%)";
// text.style.fontSize = "20px";
// text.style.fontWeight = "bold";
// loader.appendChild(text);

  document.body.appendChild(loader);

  
    const selectedOption = document.querySelector('input[name="selectedOption"]:checked').value;
    const response1 =  await  axios.post('/DPC_Data', {selectedOption:selectedOption});

  let data = response1.data
  // console.log(response1)
  // console.log(data)
  try {
    const mainele = document.getElementById("mainele");
    mainele.innerHTML = ''
      mainele.innerHTML = `
        <table id="datatable">
			<thead>
				<tr>
					${Object.keys(data[0]).map((key, index) => `
					<th>
						${key}
						${index === 0 ? `
					` : ''}
					</th>`).join("")}
				</tr>
				</thead>
          <tbody>
            ${data.map(row => `
              <tr>
                ${Object.values(row).map(value => `<td>${value}</td>`).join("")}
              </tr>
            `).join("")}
          </tbody>
        </table>
      `;
      // Initialize DataTable plugin with pagination and column filtering options
      $(document).ready(function() {
        const table = $('#datatable').DataTable({
          "pagingType": "full_numbers",
          "searching": true,
          "ordering": true,
          "order": [[ 2, "DESC" ]],
          // "columnDefs": [
          //   { "targets": '_all', "searchable": true },
          //   { "targets": '_all', "sortable": true }
          // ]
        });
        $('.search-input').on('keyup', function () {
          const columnIdx = $(this).parent().index();
          const searchValue = $(this).val();
          table.column(columnIdx).search(searchValue).draw();
        });
        $('.filter-dropdown').on('change', function () {
          const columnIdx = $(this).parent().index();
          const filterValue = $(this).val();
          table.column(columnIdx).search(filterValue).draw();
        });
      });
    
  } catch (error) {
    console.error(error);
  }
  finally {
    // Remove the loader from the page
    document.body.removeChild(loader);
  }
}
async function getFilteredData(e){
  e.preventDefault()
  // Add a loader to the page
  const loader = document.createElement("div");
  loader.classList.add("loader");
  loader.style.position = "fixed";
  loader.style.top = "35%";
  loader.style.left = "42%";
  loader.style.transform = "translate(-50%, -50%)";
  loader.style.border = "25px solid rgba(0, 0, 0, 0.1)";
  loader.style.borderTopColor = "#3498db";
  loader.style.borderRadius = "75%";
  loader.style.width = "250px";
  loader.style.height = "250px";
  loader.style.animation = "spin 1s ease-in-out infinite";


  document.body.appendChild(loader);
  const District = document.querySelector('#district').value
  const PARLIAMENT = document.querySelector('#parliament').value
  const Caste = document.querySelector('#Caste').value
  const Gender = document.querySelector('#Gender').value
  const age =document.querySelector('#age').value
  const selectedOption = document.querySelector('input[name="selectedOption"]:checked').value;  
  console.log(Caste)
  const response1 = await  axios.post('/DPC_Data', {selectedOption:selectedOption,Gender:Gender,Caste:Caste,age:age,
    District:District,PARLIAMENT:PARLIAMENT});
  let data = response1.data
  // console.log(data)
  try {
    const mainele = document.getElementById("mainele");             
      mainele.innerHTML = `
        <table id="datatable">
			<thead>
				<tr>
					${Object.keys(data[0]).map((key, index) => `
					<th>
						${key}
						${index === 0 ? `
						<select class="filter-dropdown">
							<option value=""> ${key}</option>
							${Array.from(new Set(data.map(row => row[key]))).map(value => `
							<option value="${value}">${value}</option>
							`).join("")}
						</select>` : ''}
					</th>`).join("")}
				</tr>
				</thead>
          <tbody>
            ${data.map(row => `
              <tr>
                ${Object.values(row).map(value => `<td>${value}</td>`).join("")}
              </tr>
            `).join("")}
          </tbody>
        </table>
      `;
      // Initialize DataTable plugin with pagination and column filtering options
      $(document).ready(function() {
        const table = $('#datatable').DataTable({
          "pagingType": "full_numbers",
          "searching": true,
          "ordering": true,
          "order": [[ 0, "asc" ]],
          "columnDefs": [
            { "targets": '_all', "searchable": true },
            { "targets": '_all', "sortable": true }
          ]
        });
        $('.search-input').on('keyup', function () {
          const columnIdx = $(this).parent().index();
          const searchValue = $(this).val();
          table.column(columnIdx).search(searchValue).draw();
        });
        $('.filter-dropdown').on('change', function () {
          const columnIdx = $(this).parent().index()
          const filterValue = $(this).val()
          table.column(columnIdx).search(filterValue).draw()
        })
      }) 
  }catch(error){
    console.error(error);
  }
  finally {
    // Remove the loader from the page
    document.body.removeChild(loader);
  }
 
}





// // attach click event listener to button
// // Client-side code
// const button = document.getElementById('TDPJSPAlliance-btn');
// button.addEventListener('click', () => {
//   const selectedOption = document.querySelector('input[name="selectedOption"]:checked').value;
//   axios.post('/TDPJSPAlliance', { selectedOption })
//     .then(response => {
//       const mainele = document.getElementById('mainele');
//       mainele.innerHTML = response.data;
//     })
//     .catch(error => console.error(error));
// });



const TDPJSPAlliancebtn = document.querySelector('#TDPJSPAlliance-btn')
TDPJSPAlliancebtn .addEventListener('click',TDPJSPAlliance)
async function  TDPJSPAlliance(e){
  e.preventDefault()
// Add a loader to the page
const loader = document.createElement("div");
  loader.classList.add("loader");
  loader.style.position = "fixed";
  loader.style.top = "35%";
  loader.style.left = "42%";
  loader.style.transform = "translate(-50%, -50%)";
  loader.style.border = "25px solid rgba(0, 0, 0, 0.1)";
  loader.style.borderTopColor = "#3498db";
  loader.style.borderRadius = "75%";
  loader.style.width = "250px";
  loader.style.height = "250px";
  loader.style.animation = "spin 1s ease-in-out infinite";
//   const text = document.createElement("span");
// text.textContent = "Loading data";
// text.style.position = "absolute";
// text.style.top = "50%";
// text.style.left = "50%";
// text.style.transform = "translate(-50%, -50%)";
// text.style.fontSize = "20px";
// text.style.fontWeight = "bold";
// loader.appendChild(text);

  document.body.appendChild(loader);

  
    const selectedOption = document.querySelector('input[name="selectedOption"]:checked').value;
    const response1 =  await  axios.post('/TDPJSPAlliance', {selectedOption:selectedOption});

  let data = response1.data
  // console.log(response1)
  // console.log(data)
  try {
    const mainele = document.getElementById("mainele");
    mainele.innerHTML = ''
      mainele.innerHTML = `
        <table id="datatable">
			<thead>
				<tr>
					${Object.keys(data[0]).map((key, index) => `
					<th>
						${key}
						${index === 0 ? `
					` : ''}
					</th>`).join("")}
				</tr>
				</thead>
          <tbody>
            ${data.map(row => `
              <tr>
                ${Object.values(row).map(value => `<td>${value}</td>`).join("")}
              </tr>
            `).join("")}
          </tbody>
        </table>
      `;
      // Initialize DataTable plugin with pagination and column filtering options
      $(document).ready(function() {
        const table = $('#datatable').DataTable({
          "pagingType": "full_numbers",
          "searching": true,
          "ordering": true,
          "order": [[ 0, "asc" ]],
          "columnDefs": [
            { "targets": '_all', "searchable": true },
            { "targets": '_all', "sortable": true }
          ]
        });
        $('.search-input').on('keyup', function () {
          const columnIdx = $(this).parent().index();
          const searchValue = $(this).val();
          table.column(columnIdx).search(searchValue).draw();
        });
        $('.filter-dropdown').on('change', function () {
          const columnIdx = $(this).parent().index();
          const filterValue = $(this).val();
          table.column(columnIdx).search(filterValue).draw();
        });
      });
    
  } catch (error) {
    console.error(error);
  }
  finally {
    // Remove the loader from the page
    document.body.removeChild(loader);
  }
}








</script>
</html>